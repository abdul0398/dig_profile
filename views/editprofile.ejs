<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
 <!-- Cropper.js CSS -->
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css" integrity="sha512-hvNR0F/e2J7zPPfLC9auFe3/SE0yG4aJCOd/qxew74NN7eyiSKjr7xJJMu1Jy2wf7FXITpWS1E/RY8yzuXN7VA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<!-- Cropper.js JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<body>
    <style>
    * {
        font-family: 'Arial', sans-serif;
    }
    
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
    }

    .container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        text-align: center;
    }

    .header, .footer {
        padding: 10px 0;
    }

    .profile-image-options, .theme-options {
        display: flex;
        margin-bottom: 20px;
    }

    .profile-image {
        padding: 6px 8px;
        border-radius: 24px;
        color: black;
        margin-right: 5px;
        cursor: pointer;
    }

    .theme-card {
        width: 30%;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        background-color: #fff;
    }

    .theme-header {
        background-color: #333;
        color: #fff;
        padding: 5px;
    }

    .theme-content {
        padding: 10px;
        height: 100px; /* Adjust as needed */
    }

    .select-button {
        width: 100%;
        padding: 10px;
        border: none;
        background-color: #0084ff;
        color: #fff;
        cursor: pointer;
    }

    .continue-button {
        width: 35%;
        height: 35px;
        padding: 5px;
        border: none;
        background-color: #002655;
        border-radius: 24px;
        color: #fff;
        font-size: 12px;
    }
    .continue-button:hover{
        cursor: pointer;
    }
    .theme-options .image-container {
        width: 100px;
        overflow: hidden;
        height: 85px;
        margin: 0px 10px;
        border: 1px solid #cdcdcd;
        border-radius: 13px;
    }

    .theme-options img {
        width: 100%;
        object-position: center;
    }
    .profile_edit_container{
        display: none;
       
        height: 100%;
        
    }
    .selected{
        box-shadow: 0px 0px 39px 5px rgba(0,0,0,1);
    }
    #add_profile{
        background-size: cover !important;
        background-position: center !important;
        font-size: 14px;
    }
    .footer{
        position: absolute;
        bottom: 10px;
        width: 50%;
    }
    .link{
        background-color: beige;
        border-radius: 20px;
        height: 120px;
        display: flex;
        padding: 20px;
        flex-direction: column;
        margin-top: 10px;
    }
    .link input{
        border: none;
        border-bottom: 1px solid rgb(180, 180, 180);
        background-color: transparent;
    } 
    #addLinkButton, #addHeadingButton, #addFormBtn, #editFormBtn, #editgallery{
        padding: 6px 8px;
        border: 1px solid gray;
        border-radius: 24px;
        background-color: #FFFFFF !important;
        color: gray !important;
        cursor: pointer;
        font-size: 14px;
    }
    .link_container, #link_container_dynamic{
        width: 100%;
        overflow: auto;
       
        
    }
    .deleteButton{
        display: inline;
        width: fit-content;
        cursor: pointer;
        margin: auto;
    }
    .break_between_inputs{
        width: 100%;
    }
    #drag_icon{
        cursor: grab;
    }
    .fixed_link{
        background-color: beige;
        border-radius: 20px;
        display: flex;
        padding: 20px;
        flex-direction: column;
        margin-top: 10px;
    }
    .fixed_link input{
        border: none;
        border-bottom: 1px solid rgb(180, 180, 180);
        background-color: transparent;
    }
    .d_wrap{
        flex-wrap: nowrap;
    }
    @media only screen and (max-width: 600px) {
    .d_wrap{
        flex-wrap: wrap;
    }
    .temp{
        display: none !important;
    }
    }
    .modal {
        display: none;
        position: fixed;
        z-index: 2;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 6% auto;
        padding: 20px;
        border: none;
        width: fit-content; /* Adjust width as needed */
        max-width: 500px;
        height: auto; /* Adjust height automatically based on content */
        max-height: 80%; /* Limit the maximum height */
        background: transparent;

    }

    .modal-footer {
        padding: 10px;
    }

    #profileImage {
        max-width: 100%; /* Ensure image does not exceed the width of modal */
        height: auto; /* Adjust height automatically */
        max-height: 400px; /* Maximum height for the image */
    }

    /* Responsive adjustments */
    @media screen and (max-width: 600px) {
        .modal-content {
            width: 80%;
        }
    }
    .display_none{
        display: none;
    }
    .text_style{
        color: #000;
        font-family: Inter;
        font-size: 12px;
        font-style: normal;
        font-weight: 400;
        line-height: normal; 
    }
    .input_about{
        width: 95%;
        display: block;
        margin: 10px auto;
        margin-top: auto;
        border-radius: 7px;
        border: none;
        font-size: 12px;
        padding: 8px 20px;
    }
    .textarea_desc{
        width: 95%;
        display: block;
        margin: auto;
        margin-top: auto;
        font-size: 12px;
        border-radius: 7px;
        border: none;
        padding: 8px 20px 20px;
        margin-top: 10px;
        resize: none;
    }

    .addnew-section-btn{
        width: 320px;
        border-radius: 19px;
        font-size: 12px;
        padding: 4px 7px;
        border: none;
        background-color: #0066C9 !important;
    }
    .add-more-filed-btn{
        border-radius: 20px;
        font-size: 10px;
        background-color: #0066C9 !important;
        padding: 3px 7px;
        margin: 10px auto 10px auto;
        width: 90px;
    }
    .input_container_with_eye{
        width: 95%;
        margin: auto;
        background-color: white;
        display: flex;
        border-radius: 10px;
        padding: 12px 10px;
        margin-bottom: 8px;
    }
    .input_container_with_eye input {
        width: 100%;
        border: none;
    }
    .eye{
        cursor: pointer;
    }
    .eye_open{
        color: #0066C9;
    }
    .eye_close{
        color: #000;
    }
    </style>

<div class="profile_edit_container ms-3">
    <div style="text-align: end;">
        <span style="text-align: end; cursor: pointer;" onclick="closeEditDiv()">X</span>
    </div>
    <p hidden id="profile_id"></p>
    <section id="step1" class="profile-selection">
      <header>
        <h4 style="color: black;">Choose your appearance</h4>
        <p style="font-size: 10px; opacity: 0.5;" >You can change this and view more options later.</p>
      </header>
    <div class="theme-options">
        <div template_id="1" class="image-container">
            <img src="./temp1.jpg">
        </div>
        
        <div template_id="2" class="image-container">
          <img src="./temp2.jpg">
        </div>
        
        <div template_id="3" class="image-container">
          <img src="./temp3.jpg" >
        </div>
      </div>
      <button id="nextBtn" style="position: absolute;" onclick="showNext(this)" class="continue-button">Continue</button>
  </section>
  <section style="display: none;" id="step2" class="section_two two">

    <div id="modal" class="modal">
        <div class="modal-content">
            <img id="profileImage" />
            <div style="text-align: center;" class="modal_footer">
                <button style="width: 250px;
                padding: 5px 10px;
                border-radius: 24px;
                height: 50px;" id="cropImage">Crop Image</button>
            </div>
        </div>
    </div>
    

    <div class="d_wrap" style="margin-bottom: 5px; display: flex; justify-content: space-between;">
        <div class="link_container" id="linkContainer">

            <!-- Image Upload Section -->
            <div style="width: 100%; margin: auto;">     
                <p style="margin-left: 25px; margin-bottom: 12px;" class="text_style">Upload Your Picture</p>
                <div id="add_profile" style="cursor: pointer; display: flex; justify-content: center; align-items: center; border: 1px dashed #000; background-color: #F1F5F7; height: 140px; width: 90%; margin: 0px auto 10px auto;">
                    <div style="text-align: center;">
                        <input hidden type="file" id="profile_image_upload" name="profile_image" accept="image/*" style="display: none;">
                        <i class="fa-solid fa-cloud-arrow-up fa-2xl" style="color: #99AEBE;"></i>
                        <p style="margin-top: 10px; color: #6f6f6f;
                        font-size: 12px; font-weight: bold;">Drag And drop files here</p>
                    </div>
                </div>
            </div>

            <!-- About Section -->
            <div style="width: 100%; margin: 20px auto;">     
                <p style="margin-left: 25px; margin-bottom: 12px;" class="text_style">Write Short Bio</p>
                <div id="add_profile" style="display: flex; border-radius: 10px; background-color: #F1F5F7; min-height: 140px; width: 90%; margin: 0px auto 10px auto;">
                    <div style="height: 80%; width: 100%; margin-top: 10px;">
                        <input onblur="updateProfileInfo(this)" id="profile_name_edit" name="name" placeholder="Write Your Name Here" class="input_about" type="text">
                        <textarea onblur="updateProfileInfo(this)" id="profile_desc" name="description" class="textarea_desc" style="display: block;" placeholder="Write Short Bio Here (250 Char Max)"></textarea> 
                    </div>
                </div>
            </div>

            <!-- Add New Section Button -->
            <div class="Add_new_section" style="text-align: center;">
                <div style="display: flex; width: 90%; margin: auto;">
                    <hr style="width: 96%; margin-right: 4%; background-color: #000; height: 2px; ">
                    <button onclick="AddnewSection(this)" class="addnew-section-btn">Add New Section</button>
                    <hr style="width: 96%; margin-left: 4%; background-color: #000; height: 2px;">
                </div>
            </div>

            <!-- My Active Listings Section-->
            <div class="my-active-listings-edit" style="width: 100%; margin: 20px auto;">    
                <div style="display: flex;">
                    <p style="margin-left: 25px; margin-bottom: 12px;" class="text_style">My Active Listings</p>
                    <span><i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i><i onclick="sectionHeadingHandler(this)" class="fa-solid fa-pen-to-square" style="cursor: pointer; color:#0066C9"></i></span>
                </div>                
                <div id="listing_container" style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; min-height: 140px; width: 90%; margin: 0px auto 10px auto;">
                    <div class="inner-container-eyeinputs" style="min-height: 80%; width: 100%; margin-top: 20px;">
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" class="text_style" name="Property Guru" placeholder="Poperty Guru (PUT URL HERE)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" class="text_style" name="99.co" placeholder="99.co (PUT URL HERE)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" class="text_style" name="Edge Property" placeholder="Edge Property (PUT URL HERE)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" class="text_style" name="SRX" placeholder="SRX (PUT URL HERE)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="mylisting_dynamic_container" >

                        </div>
                    </div>
                        <button class="add-more-filed-btn" onclick="addMoreField(this)">Add more fields</button>
                </div>
            </div>

            <!-- Add New Section Button -->
            <div class="Add_new_section" style="text-align: center;">
                <div style="display: flex; width: 90%; margin: auto;">
                    <hr style="width: 96%; margin-right: 4%; background-color: #000; height: 2px; ">
                    <button onclick="AddnewSection(this)" class="addnew-section-btn">Add New Section</button>
                    <hr style="width: 96%; margin-left: 4%; background-color: #000; height: 2px;">
                </div>
            </div>

            <!-- Digital Profile Section-->
            <div class="digital-profiles-edit" style="width: 100%; margin: 20px auto;">
                <div style="display: flex;">
                    <p style="margin-left: 25px; margin-bottom: 12px;" class="text_style">Digital Profiles</p>
                    <span><i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i><i onclick="sectionHeadingHandler(this)" class="fa-solid fa-pen-to-square" style="cursor: pointer; color:#0066C9"></i></span>
                </div>                
                <div style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; min-height: 140px; width: 90%; margin: 0px auto 10px auto;">
                    <div class="inner-container-eyeinputs" style="min-height: 80%; width: 100%; margin: 20px 0px;">
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" name="Personal Link" class="text_style"  placeholder="Personal Site Link" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input style="cursor: pointer;" onclick="editGalleryOpenPopUp(this)" custom_type="gallery" name="Awards" class="text_style"  placeholder="Add Awards here (Click to Create Gallery)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input style="cursor: pointer;" onclick="editGalleryOpenPopUp(this)" custom_type="gallery" name="Testimonials" class="text_style"  placeholder="Add Testimonials (Click to Create Gallery)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input custom_type="about" name="About Us" class="text_style"  placeholder="Add About Us Section (Click to add)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Add New Section Button -->
            <div class="Add_new_section" style="text-align: center;">
            <div style="display: flex; width: 90%; margin: auto;">
                <hr style="width: 96%; margin-right: 4%; background-color: #000; height: 2px; ">
                <button onclick="AddnewSection(this)" class="addnew-section-btn">Add New Section</button>
                <hr style="width: 96%; margin-left: 4%; background-color: #000; height: 2px;">
            </div>
            </div>

             <!-- Free Tools -->
             <div class=" free-tools-edit" style="width: 100%; margin: 20px auto;">     
                <div style="display: flex;">
                    <p style="margin-left: 25px; margin-bottom: 12px;" class="text_style">Free Tools</p>
                    <span><i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i><i onclick="sectionHeadingHandler(this)" class="fa-solid fa-pen-to-square" style="cursor: pointer; color:#0066C9"></i></span>
                </div>                <div style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; min-height: 140px; width: 90%; margin: 0px auto 10px auto;">
                    <div class="inner-container-eyeinputs" style="min-height: 80%; width: 100%;  margin: 20px 0px;">
                        <div class="input_container_with_eye">
                            <input custom_type="calculator" disabled name="MSR Calculator" class="text_style"  placeholder="MRS Calculator" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input custom_type="calculator" disabled name="TDRS Calculator" class="text_style"  placeholder="TDRS Calculator" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style=" margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input custom_type="calculator" disabled name="Stamp Duty Calculator" class="text_style"  placeholder="Stamp Duty Calculator" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style=" margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input custom_type="calculator" disabled name="Mortgage Calculator" class="text_style"  placeholder="Mortgage Calculator" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style=" margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input custom_type="calculator" disabled name="Progressive Calculator" class="text_style"  placeholder="Progressive Calculator" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style=" margin: 0px 10px;"></i>
                        </div>
                    </div>
                </div>
            </div>

             <!-- Add New Section Button -->
             <div class="Add_new_section" style="text-align: center;">
                <div style="display: flex; width: 90%; margin: auto;">
                    <hr style="width: 96%; margin-right: 4%; background-color: #000; height: 2px; ">
                    <button onclick="AddnewSection(this)" class="addnew-section-btn">Add New Section</button>
                    <hr style="width: 96%; margin-left: 4%; background-color: #000; height: 2px;">
                </div>
             </div>

             <!-- Book an Appointment -->
             <div style="width: 100%; margin: 20px auto;">     
                <div style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; width: 90%; margin: 0px auto 10px auto;">
                    <div style="min-height: 80%; width: 100%;  margin: 20px 0px;">
                        <div class="input_container_with_eye">
                            <input disabled class="text_style"  placeholder="Book an Appointment" type="text">
                            <i type="appointment_hidden"  class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lead Form -->
            <div style="width: 100%; margin: 20px auto;">     
                <div style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; width: 90%; margin: 0px auto 10px auto;">
                    <div style="min-height: 80%; width: 100%;  margin: 20px 0px;">
                        <div class="input_container_with_eye">
                            <input custom_type="form" class="text_style"  placeholder="Lead Form" type="text">
                            <i type="lead_hidden" class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                            <i onclick="edit_Form_show(this)" name="Default" class="fa-solid fa-pen-to-square" style="cursor: pointer; color:#0066C9"></i>
                        </div>
                    </div>
                </div>
            </div>

             <!-- Add New Section Button -->
             <div class="Add_new_section" style="text-align: center;">
                <div style="display: flex; width: 90%; margin: auto;">
                    <hr style="width: 96%; margin-right: 4%; background-color: #000; height: 2px; ">
                    <button onclick="AddnewSection(this)" class="addnew-section-btn">Add New Section</button>
                    <hr style="width: 96%; margin-left: 4%; background-color: #000; height: 2px;">
                </div>
             </div>

              <!-- Social Media  -->
            <div class="social-media-edit" style="width: 100%; margin: 20px auto;">
                <div style="display: flex;">
                    <p style="margin-left: 25px; margin-bottom: 12px;" class="text_style">Social Media</p>
                    <span><i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i><i onclick="sectionHeadingHandler(this)" class="fa-solid fa-pen-to-square" style="cursor: pointer; color:#0066C9"></i></span>
                </div>     
                <div style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; min-height: 140px; width: 90%; margin: 0px auto 10px auto;">
                    <div id="social_links_container" style="min-height: 80%; width: 100%;  margin: 20px 0px;">
                        <div inner-container-eyeinputs class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" id="facebook" class="text_style" placeholder="Facebook (URL)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" id="instagram" class="text_style"  placeholder="Instagram (URL)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" id="linkedIn" class="text_style"  placeholder="Linkedin (URL)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" id="phone" class="text_style" placeholder="Call Now (add number)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                        <div class="input_container_with_eye">
                            <input onblur="updateLinkInDatabase(this)" custom_type="link" id="whatsapp" class="text_style"  placeholder="Whatsapp (add number)" type="text">
                            <i class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Start of previewing Template 1 -->
        <div class="temp" id="temp1">
                <!-- Start of previewing Template 1 -->
            <link rel="stylesheet" href="/css/profile_small.css" />
            <div class="div">
                <section style="height: 250px;">
                    <div class="child"></div>
                    <div class="group-parent">
                    <div class="rectangle-parent">
                        <div class="group-child"></div>
                        <div class="group-item"></div>
                    </div>
                    <img class="group-inner" alt="" src="./group-47@2x.png" />
                    </div>
                    <div class="rectangle-group">
                    <div class="rectangle-div">
                        <img class="preview_profile_img polygon-icon" alt="" src="./dp.jpg" />
                    </div>
                    </div>
                    <div class="item"></div>
                </section>
            
                <section id="profile_preview_container">
                    <p class="agent-name">AGENT NAME</p>
                    <p class="desc_aboutUs" style="text-align: center;
                   color: #000;"></p>
                    <section id="profile_preview_innercontainer">
                        
                    </section>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">About</a>
                    </li>
                    <p style="margin-top:10px; font-size: 12px; color: #000; padding-left:10px ;" class="profile_heading">Free Tools</p>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">MSR Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">TDRS Calculator</a>
                    </li> 
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">Stamp duty Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">Mortgage Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">Book An Appointment</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                        <a style="pointer-events: none; color: white;" href="#">Lead Form</a>
                    </li>
                    <style>
                        
                        .profile-card {
                            display: none;
                        position: absolute;
                        bottom: 312px;
                        left: 50%;
                        background-color: #ffffff;
                        border-radius: 8px;
                        box-shadow: 0 4px 8px rgb(0 0 0 / 10%);
                        width: 60%;
                        padding: 20px;
                        margin: 20px;
                        font-family: 'Arial', sans-serif;
                        translate: -55%;
                        box-shadow: 1px -1px 13px 0px rgba(0,0,0,0.26);
                
                        }
                        .profile-photo-container {
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        
                        }
                        .profile-photo {
                        border-radius: 50%;
                        width: 80px;
                        height: 80px;
                        object-fit: cover;
                        border: 3px solid #000;
                        }
                        .profile-name {
                        font-size: 18px;
                        font-weight: bold;
                        margin: 0;
                        }
                        .profile-title {
                        font-size: 14px;
                        color: #555;
                        margin: 0;
                        }
                        .profile-quote {
                        font-size: 14px;
                        color: #333;
                        margin-top: 15px;
                        }
                    </style>
                    <div class="profile-card">
                        <div class="profile-photo-container">
                            <img src="/dp.jpg" alt="Jackson Totham" class="profile-photo">
                        </div>
                        <h2 class="profile-name">Jackson Totham</h2>
                        <p class="profile-title">CEO of Redbull</p>
                        <p class="profile-quote">
                            I really enjoyed working with them, they are Group of professionals and they know what they're Doing
                        </p>
                    </div>

                </section>
            </div>
        </div>
        
        <!-- Start of previewing Template 2 -->
        <div class="temp" id="temp2">
        
            <div class="div" style="overflow: auto;
            position: sticky; top: 30px; background-color: #1D1D1D;">
            <img class="preview_profile_img" src="" style="width: 110px;
            height: 110px;
            position: absolute;
            top: 42px;
            left: 49px;
            z-index: 1;
            border-radius: 64px;" alt="">
            <img src="./temp2_ss.png" alt="" style=" width: 100%; height: 100%; object-fit: cover; position: absolute;">
            <p class="agent-name" style="position: absolute;
            top: 200px;
            color: #ffffff;
            width: max-content;
            left: 50%;
            transform: translateX(-50%);">Hello</p>
                <section style="position: relative; margin-top: 247px; width: 100%;" class="links_container">
              <p class="desc_aboutUs" style="    text-align: center;
              color: #fff;
              width: 100%;
          "></p>
          <section  id="profile_preview_container_temp2">

          </section>
                </section>
                <section style="position: relative;">
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">About</a>
                    </li>
                    <p style="font-size: 12px;color: #fff;padding-left:10px;" class="profile_heading">Free Tools</p>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">MSR Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">TDRS Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Stamp Duty Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Mortgage Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Book An Appointment</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Lead Form</a>
                    </li>
                </section>
            </div>

        </div>
        
        <!-- Start of previewing Template 3 -->
        <div class="temp" id="temp3" style="position: sticky; top: 1px;">
            <div class="div" style="overflow: auto;
            position: sticky; background-color: #ffffff;">
            <img class="preview_profile_img" src="" style="width: 120px;
            height: 120px;
            position: absolute;
            top: 24px;
            left: 47px;
            z-index: 1;
            border-radius: 64px;" alt="">
            <img src="./temp3_ss.png" alt="" style=" width: 100%; height: 100%; object-fit: cover; position: absolute;">
            <p class="agent-name" style="width: max-content; position: absolute;
            top: 172px;
            color: black;
            left: 50%;
            transform: translateX(-50%);">Hello</p>
                <section  style="position: relative; margin-top: 235px; width: 100%;" class="links_container">
            <p class="desc_aboutUs" style="text-align: center;
            color: black;
    width: 100%;"></p>
    <section id="profile_preview_container_temp3">

    </section>
                </section>
                <section style="position: relative;">
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">About</a>
                    </li>
                    <p style="font-size: 12px;color: #000000;padding-left:10px;" class="profile_heading">Free Tools</p>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">MSR Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">TDRS Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Stamp Duty Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Mortgage Calculator</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Book An Appointment</a>
                    </li>
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="pointer-events: none; color: white;" href="#">Lead Form</a>
                    </li>
                </section>
            </div>

        </div>


    </div>
    <div style="display: flex;">
        <button style="margin: auto;" id="prevBtn" onclick="showPrev()" class="continue-button">Previous</button>
    </div>
    </section>
</div>

</body>
<script>

    let profileDataState = {
        templateSelected: 1,
    }
    onStart();

    function onStart(){
        eventListnerHandler();
        // sortableHandler();
        croppable();
    }

    // function sortableHandler(){
    //     const el = document.getElementById("link_container_dynamic");
    //     const sortable = Sortable.create(el);
    // }

    function eventListnerHandler(params) {
       const divs = document.getElementsByClassName("image-container");
       for (let i = 0; i < divs.length; i++) {
           divs[i].addEventListener("click", () => {
               for (let j = 0; j < divs.length; j++) {
                   divs[j].classList.remove("selected");
               }
               divs[i].classList.add("selected");
               profileDataState.templateSelected =  divs[i].getAttribute("template_id");
           });
       }
       document.getElementById("add_profile").addEventListener("click", () => {
           document.getElementById("profile_image_upload").click();
       });

       document.getElementById("profile_desc").addEventListener("input", ()=>{
        document.querySelectorAll(".desc_aboutUs")
        .forEach(elem=>{
            elem.innerText = document.getElementById("profile_desc").value;
        })
       })
       document.getElementById("profile_name_edit").addEventListener("input", ()=>{
        const value = document.getElementById("profile_name_edit").value;
        const name = document.querySelectorAll(".agent-name");
        name[0].innerHTML = value;
        name[1].innerHTML = value;
        name[2].innerHTML = value;
       })
       const eyelogos = document.querySelectorAll(".eye");
       eyelogos.forEach(eye=>{
            eye.addEventListener("click", ()=> eyeToggleFunction(eye));
       })
   }

    async function imageUploadHandler(blob) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const formdata = new FormData();
        formdata.append("dp", true);
        formdata.append("profile_id", profile_id);
        formdata.append("profile_image", blob, "profile_image.png");
        try {
            const res = await fetch("/api/profileupload", {
                method: "POST",
                body: formdata,
            })

            const data = await res.json();
        } catch (error) {
            console.log(error.message);
        }
   }

    function showNext(elem) {
        const selectedTemplate = document.querySelector('div.image-container.selected').getAttribute('template_id');
        profileDataState.templateSelected =  selectedTemplate
        // const arrangement = extractData();
        // populateProfilePreview(arrangement);
        document.querySelectorAll(".temp").forEach(element => {
            element.style.display = "none";
        });
        document.getElementById(`temp${selectedTemplate}`).style.display = "block";
        document.getElementById('step1').style.display = 'none';
        document.getElementById('step2').style.display = 'block';
        
    }

    function showPrev() {
    document.getElementById('step1').style.display = 'block';
    document.getElementById('step2').style.display = 'none';
}

    function populateProfilePreview(arrangment) {
        // if(profileDataState.templateSelected == 1){
        //     // Poluplating template 1
        //     const profile_preview_container  = document.getElementById("profile_preview_innercontainer");
        //     profile_preview_container.innerHTML = "";
        //     arrangment.forEach(element => {
        //         if(element.type === "link"){
        //             profile_preview_container.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
        //             <a style="pointer-events: none; color: white;" href="${element.link}">${element.name}</a>
        //         </li>`
        //         }else if(element.type === "heading"){
        //             profile_preview_container.innerHTML += `<p style="margin-top:10px; font-size: 12px; color: #000; padding-left:10px ;" class="profile_heading">${element.heading}</p>`
        //         }else{
        //             profile_preview_container.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
        //             <a style="pointer-events: none; color: white;" href="${element.link}">${element.name}</a>
        //         </li>`
        //         }
        //     });
        // }else if(profileDataState.templateSelected == 2){
        //     // populating template 2
        //     const profile_preview_container_temp2  = document.getElementById("profile_preview_container_temp2");
        //     profile_preview_container_temp2.innerHTML = "";
        //     arrangment.forEach(element => {
        //         if(element.type === "link"){
        //             profile_preview_container_temp2.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
        //                 <a style="pointer-events: none; color: white;" href="${element.link}">${element.name}</a>
        //             </li>`
        //         }else if(element.type === "heading"){
        //             profile_preview_container_temp2.innerHTML += `<p style="font-size: 12px;color: #fff;padding-left:10px;" class="profile_heading">${element.heading}</p>`;
        //         }else{
        //             profile_preview_container_temp2.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 32px;">
        //             <a style="pointer-events: none; color: white;" href="${element.link}">${element.name}</a>
        //         </li>`
        //         }
        //     });
        // }else{
        //     const profile_preview_container_temp3  = document.getElementById("profile_preview_container_temp3");
        //     profile_preview_container_temp3.innerHTML = "";
        //     arrangment.forEach(element => {
        //         if(element.type === "link"){
        //             profile_preview_container_temp3.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
        //                 <a style="pointer-events: none; color: white;" href="${element.link}">${element.name}</a>
        //             </li>`
        //         }else if(element.type === "heading"){
        //             profile_preview_container_temp3.innerHTML += `<p style="font-size: 12px; margin-bottom:2px; color: #000;padding-left:10px;" class="profile_heading">${element.heading}</p>`;
        //         }else{
        //             profile_preview_container_temp3.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 32px;">
        //             <a style="pointer-events: none; color: white;" href="${element.link}">${element.name}</a>
        //         </li>`
        //         }
        //     });
            
        // }        
    }

    function validation() {
        const inputs = document.querySelectorAll('#link_container_dynamic input[type="text"]:not([style*="display:none"])');
        // validate all inputs of type text
        let valid = true;
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].style.border = 'none';
            if (inputs[i].value === '') {
                if(inputs[i].style.display === "none"){
                    continue;
                }
                valid = false;
                inputs[i].style.border = '1px solid red';
            }
        }
        if(!valid){
            Swal.fire({
                title: "Please fill all the fields",
                icon: "error",
                confirmButtonText: "Ok",
            }).then((result) => {
                if (result.isConfirmed) {
                    return false;
                }
            });
        }
        return valid;
    }

    async function submitProfile() {
        // if(!validation()){
        //     return;
        // }
        const data = extractData();
        console.log(data);
        // extract all fixed input data

        

        const description = document.getElementById("profile_desc").value;
        const profile_name = document.getElementById("profile_name_edit").value
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const response = await fetch("/updateLinks", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                data: data,
                profileId:profile_id,
                templateSelected: profileDataState.templateSelected,
                description:description,
                name:profile_name
            }),
        })
        if(response.status === 200){
            Swal.fire({
                title: "Profile Updated",
                icon: "success",
                confirmButtonText: "Ok",
            });
    }
}

    async function addFormPopup(){
    document.getElementById("form_submit_btn").setAttribute("onclick", "saveForm()");
    const overlay = document.getElementById("overlay");
    overlay.style.display = "block";
    document.getElementById("form_popup").classList.add("open_popup");
    document.getElementById("form_popup").classList.remove("close_popup");
}

    async function editFormHandler(){
    const overlay = document.getElementById("overlay");
    overlay.style.display = "block";
    const modal = document.querySelector(".form_edit_popup");
    modal.classList.add("open_popup");
    modal.classList.remove("close_popup");   
}

    function showLoadingOverlay() {
        const overlay = document.querySelector('.overlay_loading');
        overlay.style.display = 'block';
    }

    function hideLoadingOverlay() {
    const overlay = document.querySelector('.overlay_loading');
    overlay.style.display = 'none';
}

    function croppable(params) {
    let cropper;

    document.getElementById('profile_image_upload').addEventListener('change', function(event) {
        let file = event.target.files[0];
        document.getElementById('profile_image_upload').value = null;
        let reader = new FileReader();

        reader.onload = function(e) {
            let img = document.getElementById('profileImage');
            img.src = e.target.result;

            // Show the modal
            document.getElementById('modal').style.display = 'block';

            // Initialize Cropper.js on the image
            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(img, {
                aspectRatio: 1,
                viewMode: 1,
                modal:false,
                background:false,
                zoomable:false
            });
        };
        reader.readAsDataURL(file);
    });

    document.getElementById('cropImage').addEventListener('click', async function() {
        let file = cropper.getCroppedCanvas().toDataURL('image/png');
        const blob = await (await fetch(file)).blob();
        showLoadingOverlay();
        await imageUploadHandler(blob);
        hideLoadingOverlay()
        const preview_profile_img = document.getElementsByClassName("preview_profile_img");
        for (let i = 0; i < preview_profile_img.length; i++) {
            preview_profile_img[i].src = file;
        }
        Swal.fire("Saved!", "", "success");
        document.getElementById('modal').style.display = 'none';

        // Destroy the cropper instance
        cropper.destroy();
        cropper = null;
    });

    // Optional: Close the modal if clicked outside of it
    window.onclick = function(event) {
        if (event.target.className === 'modal') {
            document.getElementById('modal').style.display = "none";
            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        }
    };
}

    async function editGalleryOpenPopUp(input) {
        const galleryname = input.getAttribute("name");
        const modal_gallery = document.getElementById('imageUploadModal-gallery');
        showLoadingOverlay();
        await fetchImagesPathAndPopulate(galleryname)
        modal_gallery.style.display = 'block';
        modal_gallery.setAttribute("gallery-name", galleryname);
        hideLoadingOverlay()
    }

    async function fetchImagesPathAndPopulate(galleryname) {
            const id = document.getElementById("profile_id").getAttribute("profile_id");
            const response = await fetch(`/api/get/gallery/${id}/${galleryname}`);
            const {images} = await response.json();
            const imageList = document.getElementById('imageList');
            imageList.innerHTML = "";
            images.forEach(img_link =>{
                const imgContainer = document.createElement('div');
                imgContainer.classList.add('image-container-gallery');

                const image = document.createElement('img');
                image.src = `uploads/${id}/gallery/${galleryname}/${img_link}`;
                image.alt = 'Uploaded Image';
                image.setAttribute("path", img_link);

                const deleteButton = document.createElement('button');
                deleteButton.classList.add('delete-gallery-button');
                deleteButton.innerHTML = `&times;`;
                deleteButton.onclick = async function () {
                    showLoadingOverlay();
                    await deleteImage(image.getAttribute("path"));
                    hideLoadingOverlay();
                    imageList.removeChild(imgContainer);
                };

                imgContainer.appendChild(image);
                imgContainer.appendChild(deleteButton);
                imageList.appendChild(imgContainer);
            })
        }

    // function addMoreFieldInListing() {
    //     var container = document.getElementById('listing_container');
        
    //     // Create a new input container
    //     var newInputContainer = document.createElement('div');
    //     newInputContainer.className = 'input_container_with_eye';

    //     // Create a new input element
    //     var newInput = document.createElement('input');
    //     newInput.className = 'text_style';
    //     newInput.placeholder = 'New Source (PUT URL HERE)';
    //     newInput.type = 'text';

    //     // Create a new eye icon
    //     var newEyeIcon = document.createElement('i');
    //     newEyeIcon.className = 'eye fa-solid fa-eye eye_open';
    //     newEyeIcon.style.margin = '0px 10px';

    //     // Create a new delete button
    //     var deleteButton = document.createElement('button');
    //     deleteButton.textContent = 'Delete';
    //     deleteButton.className = 'delete-btn';
    //     deleteButton.onclick = function() {
    //         container.removeChild(newInputContainer);
    //     };

    //     // Append the input, eye icon, and delete button to the new container
    //     newInputContainer.appendChild(newInput);
    //     newInputContainer.appendChild(newEyeIcon);
    //     newInputContainer.appendChild(deleteButton);

    //     // Append the new container to the main container
    //     container.insertBefore(newInputContainer, container.lastChild);
    // }

    function sectionHeadingHandler(elem) {
        const para = elem.parentNode.previousElementSibling;
        if(para){
            para.contentEditable = true;
            para.classList.add('editable');
            para.focus();
        }
        para.addEventListener("blur", async function (){
            const id = para.getAttribute("section_id");
            const heading = para.innerText
            await changeSectionHeading(id,heading);
            para.contentEditable = false;
            para.classList.remove('editable');

        })
    }

    async function changeSectionHeading(id, heading) {
            const res = await fetch(`/api/section/changeName/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({heading}),
            })
            const data = await res.json();
            if (res.status !== 200) {
                Swal.fire({
                    title: data.message,
                    icon: "error",
                    confirmButtonText: "Ok",
                });
            }else{
                Swal.fire({
                    title: data.message,
                    icon: "success",
                    confirmButtonText: "Ok",
                });
            }
        }


        
    async function addMoreField(elem) {
        const div_container = elem.previousElementSibling;
        // Prompt the user for the name of the field
        Swal.fire({
        title: "Enter Name Of the Field",
        input: "text",
        inputAttributes: {
            autocapitalize: "off"
        },
        showCancelButton: true,
        confirmButtonText: "Add",
        showLoaderOnConfirm: true,
        inputValidator: (value) => {
                if (!value) {
                return "You need to Write something!";
                }
            },
        preConfirm: async (fieldName) => {
            const { value:type } = await Swal.fire({
            title: "Select Type",
            input: "radio",
            inputOptions:{
                "text": "Normal Field",
                "gallery": "New Gallery",
                "form": "New Form"
                },
            inputValidator: (type) => {
                if (!type) {
                return "You need to choose something!";
                }
            }
            });
            if(type == "text"){
                createFieldHandler(elem, fieldName, div_container,"link", `${fieldName} (Put URL Here )`);
            }else if(type == "gallery"){
                const bool = await createGalleryFolder(fieldName);
                if(bool){
                    createFieldHandler(elem, fieldName, div_container, type, `${fieldName} (Click To edit Gallery)`);
                }
            }else{
                const bool = await createFormForField(fieldName);
                if(bool){
                    createFieldHandler(elem, fieldName, div_container, type, `${fieldName} (Click To edit Form)`);
                }
            }




            
        },
        allowOutsideClick: () => !Swal.isLoading()
        })
    }

    async function createFieldHandler(elem, fieldName, div_container, type, placeholder){
        const section_id = elem.getAttribute("section_id");
        const id = await createNewLinkInSection(section_id, type, fieldName, type == "link"?"":null);
        if(!id){
            Swal.fire({
                title: "Something went wrong",
                icon: "error",
                confirmButtonText: "Ok",
            }).then((result) => {
                if (result.isConfirmed) {
                    return;
                }
            });
            return 
        }

        if (fieldName) {
            // Create a new input container with the specified name
            let newInputContainer = document.createElement('div');
            newInputContainer.className = 'input_container_with_eye';

            let newInput = document.createElement('input');
            newInput.className = 'text_style';
            newInput.name = fieldName;
            newInput.placeholder = placeholder;
            if(type != "link"){
                newInput.style.cursor = "pointer"
            }
            newInput.setAttribute("custom_type", type);
            newInput.setAttribute("link_id", id);
            newInput.type = "text";

            if(type == "link"){
                newInput.addEventListener("blur", ()=> updateLinkInDatabase(newInput))
            }else if(type == "gallery"){
                newInput.addEventListener("click",()=> editGalleryOpenPopUp(newInput))
            }else{
                newInput.addEventListener("click",()=> edit_Form_show(newInput))
            }

            let newEyeIcon = document.createElement('i');
            newEyeIcon.className = 'eye fa-solid fa-eye eye_open';
            newEyeIcon.style.margin = '0px 10px';

            newEyeIcon.addEventListener("click",()=>{eyeToggleFunction(newEyeIcon)});

            let deleteIcon = document.createElement('i');
            deleteIcon.className = 'fas fa-trash-alt delete-field-btn';
            deleteIcon.style.color = "#0066C9"
            deleteIcon.setAttribute("link_id", id);
            deleteIcon.style.cursor = "pointer"
            deleteIcon.onclick = function () {
                // Remove the parent container when the trash icon is clicked
                deleteLinkInDatabase(deleteIcon);
            };
            // Append the new elements to the container
            newInputContainer.appendChild(newInput);
            newInputContainer.appendChild(newEyeIcon);
            newInputContainer.appendChild(deleteIcon);

            div_container.appendChild(newInputContainer);
            
            
        }
   
    }


    async function createNewLinkInSection(section_id, type, name, link){
        const res = await fetch("/api/link/create", {
            method:"POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({id:section_id, type, name, link})
        })
        const resData = await res.json()
        if(res.status == 200){
            Swal.fire({
                title: resData.message,
                icon: "success",
                confirmButtonText: "Ok",
            });
            return resData.id;
        }else{
            Swal.fire({
                title: resData.message,
                icon: "error",
                confirmButtonText: "Ok",
            });
            return false;
        }  
    }


    async function createGalleryFolder(galleryname) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const res = await fetch("/api/gallery/create", {
            method:"POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({id:profile_id, galleryname:galleryname})
        })
        const resData = await res.json()
        if(res.status == 200){
            Swal.fire({
                title: resData.message,
                icon: "success",
                confirmButtonText: "Ok",
            });
            return true;
        }else{
            Swal.fire({
                title: resData.message,
                icon: "error",
                confirmButtonText: "Ok",
            });
            return false;
        }
    }


    async function updateVisibility(eye) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        let type = null;
        if(eye.getAttribute("type")){
            type = eye.getAttribute("type");
        }
        const input = eye.previousElementSibling;
        const id = input.getAttribute("link_id");
        const hidden = !eye.classList.contains("eye_close");
        showSaveToast();
        await fetch("/api/link/update/visibility", {
            method:"POST",
            headers:{
                "Content-Type":"application/json"
            },
            body:JSON.stringify({id, hidden, type, profile_id})
        })
    }


    async function updateLinkInDatabase(elem) {
        const id = elem.getAttribute("link_id");
        const value = elem.value;
        // Create a Fetch request
        showSaveToast();
        await fetch('/api/link/update/value', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: id, value: value }),
        })
    }

    async function updateProfileInfo(elem) {
        const name = elem.getAttribute("name");
        const id = elem.getAttribute("profile_id");
        const value = elem.value;
        // Create a Fetch request
        showSaveToast();
        await fetch('/api/profile/update/info', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({name, id: id, value: value }),
        })
    }
  
    async function deleteLinkInDatabase(elem) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");

     try {
        showSaveToast();
        await fetch('/api/link/delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: elem.getAttribute("link_id"), profile_id:profile_id }),
        })

        // remove its parentContainer also
        elem.parentNode.remove();
     } catch (error) {
        console.log(error.message);
     }
    }

    function showSaveToast() {
        const Toast = Swal.mixin({
        toast: true,
        position: "top-end",
        showConfirmButton: false,
        timer: 2000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.onmouseenter = Swal.stopTimer;
            toast.onmouseleave = Swal.resumeTimer;
        }
        });
        Toast.fire({
        icon: "success",
        title: "Saving"
        });
    }

    function eyeToggleFunction(eye) {
        updateVisibility(eye);
        eye.classList.toggle("eye_open");
        eye.classList.toggle("eye_close")
            
    }

    async function createFormForField(fieldName) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const res = await fetch("/api/form/create", {
            method:"POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({id:profile_id, name:fieldName})
        })
        const resData = await res.json()
        if(res.status == 200){
            Swal.fire({
                title: resData.message,
                icon: "success",
                confirmButtonText: "Ok",
            });
            return true;
        }else{
            Swal.fire({
                title: resData.message,
                icon: "error",
                confirmButtonText: "Ok",
            });
            return false;
        }

    }

    function allowDrop(event) {
        event.preventDefault();
    }

    function drag(event) {
        event.dataTransfer.setData("text", event.target.outerHTML);
    }

    function drop(event) {
        event.preventDefault();
        const data = event.dataTransfer.getData("text");
        const draggedElement = document.createElement("div");
        draggedElement.innerHTML = data;

        const target = event.target.closest('.draggable');
        if (target) {
            // Insert the dragged element before the target element
            target.parentNode.insertBefore(draggedElement.firstChild, target);
            // Remove the original dragged element
            draggedElement.parentNode.removeChild(draggedElement);
        } else {
            // Append the dragged element to the container if no target is found
            event.currentTarget.appendChild(draggedElement.firstChild);
        }
    }


    async function AddnewSection(button) {
        Swal.fire({
        title: "Enter Name Of the Field",
        input: "text",
        inputAttributes: {
            autocapitalize: "off"
        },
        showCancelButton: true,
        confirmButtonText: "Add",
        showLoaderOnConfirm: true,
        inputValidator: (value) => {
                if (!value) {
                return "You need to Write something!";
                }
            },
        preConfirm: async (fieldName) => {
      
            const id = await createSectionInDB(fieldName);
            const sectionHTML = `
                <div id="${id}" style="width: 100%; margin: 20px auto;">    
                    <div style="display: flex;">
                        <p section_id="${id}" style="margin-left: 25px; margin-bottom: 12px;" class="text_style">${fieldName}</p>
                        <span>
                            <i onclick = "(eyeToggleFunction(this))" class="eye fa-solid fa-eye eye_open" style="margin: 0px 10px;"></i>
                            <i onclick="sectionHeadingHandler(this)" class="fa-solid fa-pen-to-square" style="cursor: pointer; color:#0066C9"></i>
                            <i onclick="deleteSection(this)" section_id="${id}"  class="fas fa-trash-alt delete-field-btn" style="cursor: pointer; color:#0066C9"></i>
                        </span>
                    </div>                
                    <div style="display: flex; flex-direction: column; border-radius: 10px; background-color: #F1F5F7; width: 90%; margin: 0px auto 10px auto;">
                        <div class="inner-container-eyeinputs" style="min-height: 80%; width: 100%; margin-top: 20px;">
                            <div class="mylisting_dynamic_container"></div>
                        </div>
                        <button section_id="${id}" class="add-more-filed-btn" onclick="addMoreField(this)">Add more fields</button>
                    </div>
                </div>
            `;

            // Convert the HTML string to a DOM element
            const tempContainer = document.createElement('div');
            tempContainer.innerHTML = sectionHTML;
            const section = tempContainer.firstElementChild;
            console.log(section);

            const container = button.closest('.Add_new_section');
            const parent = container.parentNode;
           
            // Insert the new section after the clicked button's container
            parent.insertBefore(section, container);
        },
        allowOutsideClick: () => !Swal.isLoading()
    })
    }

    async function createSectionInDB(name) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const res = await fetch("/api/section/create", {
            method:"POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({id:profile_id, name})
        })
        const resData = await res.json()
        if(res.status == 200){
            Swal.fire({
                title: resData.message,
                icon: "success",
                confirmButtonText: "Ok",
            });
            return resData.id;
        }else{
            Swal.fire({
                title: resData.message,
                icon: "error",
                confirmButtonText: "Ok",
            });
            return false;
        }  
    }

    async function deleteSection(elem) {
        document.getElementById(elem.getAttribute("section_id")).remove();
        const id = elem.getAttribute("section_id");
        const res = await fetch("/api/section/delete", {
            method:"POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({id})
        })
        const resData = await res.json()
        if(res.status == 200){
            Swal.fire({
                title: resData.message,
                icon: "success",
                confirmButtonText: "Ok",
            });
            elem.closest(".created_section").remove();
        }else{
            Swal.fire({
                title: resData.message,
                icon: "error",
                confirmButtonText: "Ok",
            });
            return false;
        }  
    }
</script>
