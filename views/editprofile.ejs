<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
 <!-- Cropper.js CSS -->
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css" integrity="sha512-hvNR0F/e2J7zPPfLC9auFe3/SE0yG4aJCOd/qxew74NN7eyiSKjr7xJJMu1Jy2wf7FXITpWS1E/RY8yzuXN7VA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<!-- Cropper.js JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<body>
    <style>
    * {
        font-family: 'Arial', sans-serif;
    }
    
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
    }

    .container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        text-align: center;
    }

    .header, .footer {
        padding: 10px 0;
    }

    .profile-image-options, .theme-options {
        display: flex;
        margin-bottom: 20px;
    }

    .profile-image {
        padding: 6px 8px;
        border-radius: 24px;
        color: black;
        margin-right: 5px;
        cursor: pointer;
    }

    .theme-card {
        width: 30%;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        background-color: #fff;
    }

    .theme-header {
        background-color: #333;
        color: #fff;
        padding: 5px;
    }

    .theme-content {
        padding: 10px;
        height: 100px; /* Adjust as needed */
    }

    .select-button {
        width: 100%;
        padding: 10px;
        border: none;
        background-color: #0084ff;
        color: #fff;
        cursor: pointer;
    }

    .continue-button {
        width: 35%;
        height: 35px;
        padding: 5px;
        border: none;
        background-color: #002655;
        border-radius: 24px;
        color: #fff;
        font-size: 12px;
    }
    .continue-button:hover{
        cursor: pointer;
    }
    .theme-options .image-container {
        width: 100px;
        overflow: hidden;
        height: 85px;
        margin: 0px 10px;
        border: 1px solid #cdcdcd;
        border-radius: 13px;
    }

    .theme-options img {
        width: 100%;
        object-position: center;
    }
    .profile_edit_container{
        display: none;
        padding: 0px 20px;
        height: 100%;
        
    }
    .selected{
        box-shadow: 0px 0px 39px 5px rgba(0,0,0,1);
    }
    #add_profile{
        background-size: cover !important;
        background-position: center !important;
        font-size: 14px;
    }
    .footer{
        position: absolute;
        bottom: 10px;
        width: 50%;
    }
    .link{
        background-color: beige;
        border-radius: 20px;
        height: 120px;
        display: flex;
        padding: 20px;
        flex-direction: column;
        margin-top: 10px;
    }
    .link input{
        border: none;
        border-bottom: 1px solid rgb(180, 180, 180);
        background-color: transparent;
    } 
    #addLinkButton, #addHeadingButton, #addFormBtn, #editFormBtn, #editgallery{
        padding: 6px 8px;
        border: 1px solid gray;
        border-radius: 24px;
        background-color: #FFFFFF !important;
        color: gray !important;
        cursor: pointer;
        font-size: 14px;
    }
    .link_container, #link_container_dynamic{
        width: 100%;
        overflow: auto;
        max-height: 460px ;
        
    }
    .deleteButton{
        display: inline;
        width: fit-content;
        cursor: pointer;
        margin: auto;
    }
    .break_between_inputs{
        width: 100%;
    }
    #drag_icon{
        cursor: grab;
    }
    .fixed_link{
        background-color: beige;
        border-radius: 20px;
        display: flex;
        padding: 20px;
        flex-direction: column;
        margin-top: 10px;
    }
    .fixed_link input{
        border: none;
        border-bottom: 1px solid rgb(180, 180, 180);
        background-color: transparent;
    }
    .d_wrap{
        flex-wrap: nowrap;
    }
    @media only screen and (max-width: 600px) {
    .d_wrap{
        flex-wrap: wrap;
    }
    .temp{
        display: none !important;
    }
    }
    .modal {
        display: none;
        position: fixed;
        z-index: 2;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 6% auto;
        padding: 20px;
        border: none;
        width: fit-content; /* Adjust width as needed */
        max-width: 500px;
        height: auto; /* Adjust height automatically based on content */
        max-height: 80%; /* Limit the maximum height */
        background: transparent;

    }

    .modal-footer {
        padding: 10px;
    }

    #profileImage {
        max-width: 100%; /* Ensure image does not exceed the width of modal */
        height: auto; /* Adjust height automatically */
        max-height: 400px; /* Maximum height for the image */
    }

    /* Responsive adjustments */
    @media screen and (max-width: 600px) {
        .modal-content {
            width: 80%;
        }
    }
    #about_us_data{
        display: none;
    }


    </style>

<div class="profile_edit_container">
    <div style="text-align: end;">
        <span style="text-align: end; cursor: pointer;" onclick="closeEditDiv()">X</span>
    </div>
    <p hidden id="profile_id"></p>
    <section id="step1" class="profile-selection">
      <header>
        <h4 style="color: black;">Choose your appearance</h4>
        <p style="font-size: 10px; opacity: 0.5;" >You can change this and view more options later.</p>
      </header>
    <div class="theme-options">
        <div template_id="1" class="image-container">
            <img src="./temp1.jpg">
        </div>
        
        <div template_id="2" class="image-container">
          <img src="./temp2.jpg">
        </div>
        
        <div template_id="3" class="image-container">
          <img src="./temp3.jpg" >
        </div>
      </div>
      <button id="nextBtn" style="position: absolute;" onclick="showNext(this)" class="continue-button">Continue</button>
  </section>
  <section style="display: none;" id="step2" class="section_two two">
    
    <div>
        <button id="addLinkButton">Add link</button>
        <button id="addHeadingButton">Add Heading</button>
        <button id="addFormBtn" onclick="addFormPopup()">Add Form</button>
            <button style="border: 1px solid gray;
            border-radius: 24px;
            background-color: #FFFFFF !important;
            color: gray !important;" id="add_profile" class="profile-image add-new">Add photo</button>
          <input type="file" id="profile_image_upload" name="profile_image" accept="image/*" style="display: none;">
        <button id="editgallery" onclick="editGalleryOpenPopUp(this)">Edit Gallery</button>
    </div>

    <div id="modal" class="modal">
        <div class="modal-content">
            <img id="profileImage" />
            <div style="text-align: center;" class="modal_footer">
                <button style="width: 250px;
                padding: 5px 10px;
                border-radius: 24px;
                height: 50px;" id="cropImage">Crop Image</button>
            </div>
        </div>
    </div>
    

    <div class="d_wrap" style="margin-bottom: 5px; display: flex; justify-content: space-between;">
        <div class="link_container" id="linkContainer">
            
            <!-- Link items will be added here -->
            <div id="link_container_dynamic">
                
            </div>
            
            <div class="fixed_link">
                <p>Write about Your self</p>
                <input id="profile_desc" type="text" placeholder="Type Here..">
            </div>

            <div class="fixed_link">
                <p>About Us</p>
                <div class="radio-container-aboutus">
                    <label>Show About us Page<input type="radio" checked name="about_us_radio" value="Show About us Page" style="margin-left: 10px;"></label>
                    <label>Enter Link<input type="radio" name="about_us_radio" value="Enter Link" style="margin-left: 10px;"></label>
                </div>
                <div id="about_us_data">
                    <input style="width: 100%;" type="text" name="title" placeholder="Title" id="title_aboutus">
                    <input style="width: 100%; margin-top: 5px;" type="text" name="Heading" placeholder="Heading" id="heading_aboutus">
                    <textarea style="width: 100%; margin-top: 5px;" type="text" name="Description" placeholder="Description" id="desc_aboutus"></textarea>
                </div>
                <input style="width: 100%; margin-top: 5px;" type="text" name="Heading" placeholder="About Us Link" id="link_aboutus">
            </div>
            <div class="fixed_link">
                <p>Whats App Number</p>
                <input id="phone" type="text" placeholder="Enter you Whats App Number">
            </div>
            
            <div class="fixed_link">
                <p>Facebook</p>
                <input id="fb_link" type="text" placeholder="Facebook Link">
            </div>
            <div class="fixed_link">
                <p>Instagram</p>
                <input id="insta_link" type="text" placeholder="Instagram Link">
            </div>
            <div class="fixed_link">
                <p>LinkedIn</p>
                <input id="linkedin_link" type="text" placeholder="Linkin Link">
            </div>
            <p  style="margin-top: 20px;">Edit Forms</p>
            <section id="forms_edit_container">
            </section>
            
        </div>
        



        <!-- Start of previewing Template 1 -->
        <div class="temp" id="temp1">
                <!-- Start of previewing Template 1 -->
            <link rel="stylesheet" href="/css/profile_small.css" />
            <div class="div">
                <section style="height: 250px;">
                    <div class="child"></div>
                    <div class="group-parent">
                    <div class="rectangle-parent">
                        <div class="group-child"></div>
                        <div class="group-item"></div>
                    </div>
                    <img class="group-inner" alt="" src="./group-47@2x.png" />
                    </div>
                    <div class="rectangle-group">
                    <div class="rectangle-div">
                        <img class="preview_profile_img polygon-icon" alt="" src="./dp.jpg" />
                    </div>
                    </div>
                    <div class="item"></div>
                </section>
            
                <section id="profile_preview_container">
                    <p class="agent-name">AGENT NAME</p>
                    <section id="profile_preview_innercontainer">
                        
                    </section>
                   
                    <style>
                        
                        .profile-card {
                            display: none;
                        position: absolute;
                        bottom: 312px;
                        left: 50%;
                        background-color: #ffffff;
                        border-radius: 8px;
                        box-shadow: 0 4px 8px rgb(0 0 0 / 10%);
                        width: 60%;
                        padding: 20px;
                        margin: 20px;
                        font-family: 'Arial', sans-serif;
                        translate: -55%;
                        box-shadow: 1px -1px 13px 0px rgba(0,0,0,0.26);
                
                        }
                        .profile-photo-container {
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        
                        }
                        .profile-photo {
                        border-radius: 50%;
                        width: 80px;
                        height: 80px;
                        object-fit: cover;
                        border: 3px solid #000;
                        }
                        .profile-name {
                        font-size: 18px;
                        font-weight: bold;
                        margin: 0;
                        }
                        .profile-title {
                        font-size: 14px;
                        color: #555;
                        margin: 0;
                        }
                        .profile-quote {
                        font-size: 14px;
                        color: #333;
                        margin-top: 15px;
                        }
                    </style>
                    <div class="profile-card">
                        <div class="profile-photo-container">
                            <img src="/dp.jpg" alt="Jackson Totham" class="profile-photo">
                        </div>
                        <h2 class="profile-name">Jackson Totham</h2>
                        <p class="profile-title">CEO of Redbull</p>
                        <p class="profile-quote">
                            I really enjoyed working with them, they are Group of professionals and they know what they're Doing
                        </p>
                    </div>

                </section>
            </div>
        </div>
        
        <!-- Start of previewing Template 2 -->
        <div class="temp" id="temp2">
        
            <div class="div" style="overflow: auto;
            position: relative; background-color: #1D1D1D;">
            <img class="preview_profile_img" src="" style="width: 110px;
            height: 110px;
            position: absolute;
            top: 42px;
            left: 49px;
            z-index: 1;
            border-radius: 64px;" alt="">
            <img src="./temp2_ss.png" alt="" style=" width: 100%; height: 100%; object-fit: cover; position: absolute;">
            <p id="temp2_name" style="position: absolute;
            top: 200px;
            width: max-content;
            left: 50%;
            transform: translateX(-50%);">Hello</p>
                <section id="profile_preview_container_temp2" style="position: absolute; top: 250px; width: 100%;" class="links_container">
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="color: white;" href="">Book An Appointment</a>
                    </li>
                </section>
            </div>

        </div>
        
        <!-- Start of previewing Template 3 -->
        <div class="temp" id="temp3">
            <div class="div" style="overflow: auto;
            position: relative; background-color: #ffffff;">
            <img class="preview_profile_img" src="" style="width: 120px;
            height: 120px;
            position: absolute;
            top: 24px;
            left: 47px;
            z-index: 1;
            border-radius: 64px;" alt="">
            <img src="./temp3_ss.png" alt="" style=" width: 100%; height: 100%; object-fit: cover; position: absolute;">
            <p id="temp3_name" style="width: max-content; position: absolute;
            top: 172px;
            color: black;
            left: 50%;
            transform: translateX(-50%);">Hello</p>
                <section id="profile_preview_container_temp3" style="position: absolute; top: 214px; width: 100%;" class="links_container">
                    <li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="color: white;" href="">Book An Appointment</a>
                    </li>
                </section>
                
            </div>

        </div>


    </div>
    <div style="display: flex;">
        <button id="prevBtn" onclick="showPrev()" class="continue-button">Previous</button>
        <button id="nextBtn" onclick="showNext(this)" class="continue-button">Submit</button>
    </div>
    </section>
</div>

</body>
<script>
    let profileDataState = {
        templateSelected: 1,
    }
    onStart();

    function onStart(){
        sortableHandler();
        eventListnerHandler();
        linkAndHeadingHandler();
        croppable();
    }

    function sortableHandler(){
        const el = document.getElementById("link_container_dynamic");
        const sortable = Sortable.create(el);
    }

    function eventListnerHandler(params) {
       const divs = document.getElementsByClassName("image-container");
       for (let i = 0; i < divs.length; i++) {
           divs[i].addEventListener("click", () => {
               for (let j = 0; j < divs.length; j++) {
                   divs[j].classList.remove("selected");
               }
               divs[i].classList.add("selected");
               profileDataState.templateSelected =  divs[i].getAttribute("template_id");
           });
       }
       document.getElementById("add_profile").addEventListener("click", () => {
           document.getElementById("profile_image_upload").click();
       });
   
   }

    async function imageUploadHandler(blob) {
        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const formdata = new FormData();
        formdata.append("dp", true);
        formdata.append("profile_id", profile_id);
        formdata.append("profile_image", blob, "profile_image.png");
        try {
            const res = await fetch("/api/profileupload", {
                method: "POST",
                body: formdata,
            })

            const data = await res.json();
        } catch (error) {
            console.log(error.message);
        }
   }

    function linkAndHeadingHandler(){
        const addLinkButton = document.getElementById('addLinkButton');
        const addHeadingButton = document.getElementById('addHeadingButton');
        const linkContainer = document.getElementById('link_container_dynamic');

    
        addLinkButton.addEventListener('click', function() {
            addLink();
        });
        addHeadingButton.addEventListener('click', function() {
            addHeading();
        });
        async function addLink() {
            const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
            const {forms} = await fetchProfileDetail(profile_id);
            const linkCounter = linkContainer.children.length + 1;
            const linkDiv = document.createElement('div');
            linkDiv.classList.add('link');

            // Flex container for horizontal radio buttons
            const radioContainer = document.createElement('div');
            radioContainer.classList.add('radio-container');


            // Radio buttons for choosing between "Enter Link" and "Choose Form"
            const enterLinkRadio = createRadio(`enterLink`, linkCounter, 'Enter Link', true);
            const chooseFormRadio = createRadio(`chooseForm`, linkCounter, 'Choose Form', false);

            // Dropdown for selecting predefined forms
            const selectFormDropdown = document.createElement('select');
            selectFormDropdown.style.display = "none"; // Initially disabled
            // Add options to the dropdown (replace with your own options)
            selectFormDropdown.classList.add("form_select")
            forms.forEach(form => {
                const option = document.createElement('option');
                option.value = form.id;
                option.textContent = form.name;
                selectFormDropdown.appendChild(option);
            });
            selectFormDropdown.style.borderRadius = "30px"
            selectFormDropdown.style.marginBottom = "3px"

            // Input fields for link and name
            const inputLink = createInput('text', 'Link', false);
            const inputName = createInput('text', 'Name', false);
            
            
            inputLink.addEventListener('input', function() {
               const arrangement = extractData();
                populateProfilePreview(arrangement);
            });
            
            inputName.addEventListener('input', function() {
                const arrangement = extractData();
                populateProfilePreview(arrangement);
            });

            // Event listeners for radio buttons to enable/disable fields
            enterLinkRadio.addEventListener('change', function() {
                selectFormDropdown.style.display = 'none'; // Hide the dropdown
                inputLink.style.display = 'block'; // Show the link input
            });

            chooseFormRadio.addEventListener('change', function() {
            
                selectFormDropdown.style.display = 'block'; // Show the dropdown
                inputLink.style.display = 'none'; // Hide the link input
            });

            const deleteButton = document.createElement('div');
            deleteButton.innerHTML = `<i class="fa-solid fa-trash"></i>`;
            deleteButton.classList.add('deleteButton');
            deleteButton.onclick = function() {
                linkContainer.removeChild(linkDiv);
                const arrangement = extractData();
                populateProfilePreview(arrangement);
            };

            linkDiv.innerHTML += `<svg id="drag_icon" style="margin-left:auto" width="20px" height="30px" xmlns="http://www.w3.org/2000/svg">
                        <!-- First row of dots -->
                        <circle cx="5" cy="5" r="2" fill="black"></circle>
                        <circle cx="15" cy="5" r="2" fill="black"></circle>

                        <!-- Second row of dots -->
                        <circle cx="5" cy="15" r="2" fill="black"></circle>
                        <circle cx="15" cy="15" r="2" fill="black"></circle>
                    </svg>`;

            // Event listeners for input fields to track changes
            inputLink.addEventListener('input', function() {
                const arrangement = extractData();
                populateProfilePreview(arrangement);
            });

            inputName.addEventListener('input', function() {
                const arrangement = extractData();
                populateProfilePreview(arrangement);
            });

            // Append radio buttons to the radio container
            radioContainer.appendChild(enterLinkRadio);
            radioContainer.appendChild(chooseFormRadio);

            // Append all elements to linkDiv
            linkDiv.appendChild(radioContainer);
            linkDiv.appendChild(selectFormDropdown);
            linkDiv.appendChild(inputLink);
            linkDiv.appendChild(inputName);
            linkDiv.appendChild(deleteButton);

            // Append linkDiv to the linkContainer
            linkContainer.appendChild(linkDiv);
        }

        // Helper function to create radio buttons
        function createRadio(name, linkCount, label, checked) {
            const radio = document.createElement('input');
            radio.type = 'radio';
            radio.name = `linkChoice${linkCount}`;
            radio.value = name;
            radio.checked = checked;
            radio.style.marginLeft = "10px"
            
            const labelElement = document.createElement('label');
            labelElement.textContent = label;
            labelElement.appendChild(radio);
            
            return labelElement;
        }
        // Helper function to create input fields
        function createInput(type, placeholder, disabled) {
            const input = document.createElement('input');
            input.type = type;
            input.placeholder = placeholder;
            input.disabled = disabled;
            input.style.marginTop = "2px";
            input.style.marginBottom = "2px"
            return input;
        }
        
        function addHeading(){
            const linkDiv = document.createElement('div');
            linkDiv.classList.add('link');
            linkDiv.classList.add('break_between_inputs');

            const inputHeading = document.createElement('input');
            inputHeading.type = 'text';
            inputHeading.placeholder = 'Heading';

            const deleteButton = document.createElement('div');
            deleteButton.innerHTML = `<i class="fa-solid fa-trash"></i>`;
            deleteButton.classList.add('deleteButton');
            deleteButton.onclick = function() {
                linkContainer.removeChild(linkDiv);
                const arrangement = extractData();
                populateProfilePreview(arrangement);
            };
            linkDiv.innerHTML += `<svg id="drag_icon" style="margin-left:auto" width="20px" height="30px" xmlns="http://www.w3.org/2000/svg">
                        <!-- First row of dots -->
                        <circle cx="5" cy="5" r="2" fill="black"></circle>
                        <circle cx="15" cy="5" r="2" fill="black"></circle>

                        <!-- Second row of dots -->
                        <circle cx="5" cy="15" r="2" fill="black"></circle>
                        <circle cx="15" cy="15" r="2" fill="black"></circle>

                    </svg>`

            //#### Adding event Listner to track the changes in input into previw ####
            inputHeading.addEventListener('input', function() {
                const arrangement = extractData();
                populateProfilePreview(arrangement);
            });
            linkDiv.appendChild(inputHeading);
            linkDiv.appendChild(deleteButton);

            linkContainer.appendChild(linkDiv);
        }
        }

    function showNext(elem) {
        if(elem.innerText === "Submit"){
            submitProfile();
            return;
        }
        const selectedTemplate = document.querySelector('div.image-container.selected').getAttribute('template_id');
        profileDataState.templateSelected =  selectedTemplate
        const arrangement = extractData();
        populateProfilePreview(arrangement);
        document.querySelectorAll(".temp").forEach(element => {
            element.style.display = "none";
        });
        document.getElementById(`temp${selectedTemplate}`).style.display = "block";
        document.getElementById('step1').style.display = 'none';
        document.getElementById('step2').style.display = 'block';
        
    }

    function showPrev() {
    document.getElementById('step1').style.display = 'block';
    document.getElementById('step2').style.display = 'none';
}

    function extractData() {
    const linkContainer = document.getElementById('link_container_dynamic');
    const children = linkContainer.children;
    const data = [];

    for (let i = 0; i < children.length; i++) {
        const child = children[i];
        const inputs = child.getElementsByTagName('input');

        if (inputs.length === 4) {
            let link = '';
            let type = '';
            
            if(inputs[0].checked) {
                type = "link";
                link = inputs[2].value;
            } else {
                type = "form";
                const formSelect = child.querySelector('.form_select');
                if (formSelect) {
                    link = formSelect.value;
                }
            }

            const name = inputs[3].value;
            data.push({ type: type, link, name, order: i });
        } else if (inputs.length === 1) {
            const heading = inputs[0].value;
            data.push({ type: 'heading', heading, order: i });
        }
    }
    return data;
}

    function populateProfilePreview(arrangment) {
        if(profileDataState.templateSelected == 1){
            // Poluplating template 1
            const profile_preview_container  = document.getElementById("profile_preview_innercontainer");
            profile_preview_container.innerHTML = "";
            arrangment.forEach(element => {
                if(element.type === "link"){
                    profile_preview_container.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                    <a style="color: white;" href="${element.link}">${element.name}</a>
                </li>`
                }else if(element.type === "heading"){
                    profile_preview_container.innerHTML += `<p style="font-size: 12px; color: #000; padding-left:10px ;" class="profile_heading">${element.heading}</p>`
                }else{
                    profile_preview_container.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #0066C9; width: 160px; border-radius: 20px; height: 32px;">
                    <a style="color: white;" href="${element.link}">${element.name}</a>
                </li>`
                }
            });
        }else if(profileDataState.templateSelected == 2){
            // populating template 2
            const profile_preview_container_temp2  = document.getElementById("profile_preview_container_temp2");
            profile_preview_container_temp2.innerHTML = "";
            arrangment.forEach(element => {
                if(element.type === "link"){
                    profile_preview_container_temp2.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 35px;">
                        <a style="color: white;" href="${element.link}">${element.name}</a>
                    </li>`
                }else if(element.type === "heading"){
                    profile_preview_container_temp2.innerHTML += `<p style="font-size: 12px;color: #fff;padding-left:10px;" class="profile_heading">${element.heading}</p>`;
                }else{
                    profile_preview_container_temp2.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-color: #b68e00; width: 160px; border-radius: 20px; height: 32px;">
                    <a style="color: white;" href="${element.link}">${element.name}</a>
                </li>`
                }
            });
        }else{
            const profile_preview_container_temp3  = document.getElementById("profile_preview_container_temp3");
            profile_preview_container_temp3.innerHTML = "";
            arrangment.forEach(element => {
                if(element.type === "link"){
                    profile_preview_container_temp3.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 35px;">
                        <a style="color: white;" href="${element.link}">${element.name}</a>
                    </li>`
                }else if(element.type === "heading"){
                    profile_preview_container_temp3.innerHTML += `<p style="font-size: 12px; margin-bottom:2px; color: #000;padding-left:10px;" class="profile_heading">${element.heading}</p>`;
                }else{
                    profile_preview_container_temp3.innerHTML += `<li style="font-size: 12px; margin:0px auto 5px auto; display: flex; justify-content: center; align-items: center; background-image: linear-gradient(178.54deg, #ff1212 7.67%, #ff2c1d); width: 160px; border-radius: 20px; height: 32px;">
                    <a style="color: white;" href="${element.link}">${element.name}</a>
                </li>`
                }
            });
            
        }        
    }

    function validation() {
        const inputs = document.querySelectorAll('#link_container_dynamic input[type="text"]:not([style*="display:none"])');
        // validate all inputs of type text
        let valid = true;
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].style.border = 'none';
            if (inputs[i].value === '') {
                if(inputs[i].style.display === "none"){
                    continue;
                }
                valid = false;
                inputs[i].style.border = '1px solid red';
            }
        }
        if(!valid){
            Swal.fire({
                title: "Please fill all the fields",
                icon: "error",
                confirmButtonText: "Ok",
            }).then((result) => {
                if (result.isConfirmed) {
                    return false;
                }
            });
        }
        return valid;
    }

    async function submitProfile() {
        if(!validation()){
            return;
        }
        const data = extractData();
        const about_us = getDataOfaboutUs()
        // extract all fixed input data
        const phone = document.getElementById("phone").value;
        const fb_link = document.getElementById("fb_link").value;
        const insta_link = document.getElementById("insta_link").value;
        const linkedin_link = document.getElementById("linkedin_link").value;
        const description = document.getElementById("profile_desc").value;


        const profile_id = document.getElementById("profile_id").getAttribute("profile_id");
        const response = await fetch("/updateLinks", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                data: data,
                profile_id:profile_id,
                templateSelected: profileDataState.templateSelected,
                phone:phone,
                fb_link:fb_link,
                insta_link:insta_link,
                linkedin_link:linkedin_link,
                about_us:about_us,
                description:description
            }),
        })
        if(response.status === 200){
            Swal.fire({
                title: "Profile Updated",
                icon: "success",
                confirmButtonText: "Ok",
            });
    }
}

    async function addFormPopup(){
    document.getElementById("form_submit_btn").setAttribute("onclick", "saveForm()");
    const overlay = document.getElementById("overlay");
    overlay.style.display = "block";
    document.getElementById("form_popup").classList.add("open_popup");
    document.getElementById("form_popup").classList.remove("close_popup");
}

    async function editFormHandler(){
    const overlay = document.getElementById("overlay");
    overlay.style.display = "block";
    const modal = document.querySelector(".form_edit_popup");
    modal.classList.add("open_popup");
    modal.classList.remove("close_popup");   
}

    function showLoadingOverlay() {
        const overlay = document.querySelector('.overlay_loading');
        overlay.style.display = 'block';
    }

    function hideLoadingOverlay() {
    const overlay = document.querySelector('.overlay_loading');
    overlay.style.display = 'none';
}

    function croppable(params) {
    let cropper;

    document.getElementById('profile_image_upload').addEventListener('change', function(event) {
        let file = event.target.files[0];
        document.getElementById('profile_image_upload').value = null;
        let reader = new FileReader();

        reader.onload = function(e) {
            let img = document.getElementById('profileImage');
            img.src = e.target.result;

            // Show the modal
            document.getElementById('modal').style.display = 'block';

            // Initialize Cropper.js on the image
            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(img, {
                aspectRatio: 1,
                viewMode: 1,
                modal:false,
                background:false,
                zoomable:false
            });
        };
        reader.readAsDataURL(file);
    });

    document.getElementById('cropImage').addEventListener('click', async function() {
        let file = cropper.getCroppedCanvas().toDataURL('image/png');
        const blob = await (await fetch(file)).blob();
        showLoadingOverlay();
        await imageUploadHandler(blob);
        hideLoadingOverlay()
        const preview_profile_img = document.getElementsByClassName("preview_profile_img");
        for (let i = 0; i < preview_profile_img.length; i++) {
            preview_profile_img[i].src = file;
        }
        Swal.fire("Saved!", "", "success");
        document.getElementById('modal').style.display = 'none';

        // Destroy the cropper instance
        cropper.destroy();
        cropper = null;
    });

    // Optional: Close the modal if clicked outside of it
    window.onclick = function(event) {
        if (event.target.className === 'modal') {
            document.getElementById('modal').style.display = "none";
            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        }
    };
}

    function editGalleryOpenPopUp(params) {
        openModal_gallery();
    }
    
    async function openModal_gallery() {
        const modal_gallery = document.getElementById('imageUploadModal-gallery');
        showLoadingOverlay();
        await fetchImagesPathAndPopulate()
        modal_gallery.style.display = 'block';
        hideLoadingOverlay()
    }

    async function fetchImagesPathAndPopulate(param) {
            const id = document.getElementById("profile_id").getAttribute("profile_id");
            const response = await fetch(`/api/get/gallery/${id}`);
            const {images} = await response.json();
            console.log(images);
            const imageList = document.getElementById('imageList');
            imageList.innerHTML = "";
            images.forEach(img_link =>{
                const imgContainer = document.createElement('div');
                imgContainer.classList.add('image-container-gallery');

                const image = document.createElement('img');
                image.src = `uploads/${id}/gallery/${img_link}`;
                image.alt = 'Uploaded Image';
                image.setAttribute("path", img_link);

                const deleteButton = document.createElement('button');
                deleteButton.classList.add('delete-gallery-button');
                deleteButton.innerHTML = `&times;`;
                deleteButton.onclick = async function () {
                    showLoadingOverlay();
                    await deleteImage(image.getAttribute("path"));
                    hideLoadingOverlay();
                    imageList.removeChild(imgContainer);
                };

                imgContainer.appendChild(image);
                imgContainer.appendChild(deleteButton);
                imageList.appendChild(imgContainer);
            })
        }

    function handleRadioOfAboutUs(params) {
        const radioInputs = document.getElementsByName("about_us_radio");
        radioInputs[0].addEventListener("change", ()=>{
            document.getElementById("about_us_data").style.display = "block";
            document.getElementById("link_aboutus").style.display = "none";

        })
        radioInputs[1].addEventListener("change", ()=>{
            document.getElementById("link_aboutus").style.display = "block";
            document.getElementById("about_us_data").style.display = "none";
        })
    }
    
    handleRadioOfAboutUs();

    function getDataOfaboutUs(params) {
        let obj = {};
        let selectedValue = document.querySelector('input[name="about_us_radio"]:checked').value;
        console.log(selectedValue);
        if (selectedValue === 'Show About us Page') {
            let title = document.getElementById('title_aboutus').value;
            let heading = document.getElementById('heading_aboutus').value;
            let description = document.getElementById('desc_aboutus').value;
            obj['Title'] =  title;
            obj['Heading'] =  heading;
            obj['type'] =  "page";
            obj['Description'] =  description;
        }else if(selectedValue === "Enter Link"){
            let link = document.getElementById('link_aboutus').value;
            obj['type'] =  "link";
            obj['link'] = link;
        }
        console.log(obj);
        return obj;
    }


</script>
